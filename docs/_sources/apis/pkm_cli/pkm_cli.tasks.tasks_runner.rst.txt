..
	HASH:4a0e529f31d3c26a1f55a8f822a2ad5d

pkm\_cli.tasks.tasks\_runner \(Module\)
#######################################

Module Fields
=============

..	code-block:: python
	
	_EXECUTE_TASK = "\nimport inspect\nimport typing\nimport json\nimport sys\nfrom pathlib import Path\nimport importlib.util as iu\n\ninsn = json.loads(Path('insn.json').read_text())\n\ndef load_task(name):\n    task_spec = iu.find_spec(name)\n    task = iu.module_from_spec(task_spec)\n    \n    # extend builtins\n    task.run_task = run_task\n    task.project_info = insn['project_info']\n        \n    task_spec.loader.exec_module(task)\n    return task\n\ndef run_task(name, *args, **kwargs):\n    task = load_task(name.replace('-','_'))\n    task.run(*args, **kwargs)\n\ntask = load_task(insn['task'])\nrun_function = task.run\narg_types = typing.get_type_hints(run_function)\n\narg_names = inspect.getfullargspec(task.run).args\nnamed_args = zip(insn['args'], arg_names)\n\ndef identity(x):\n    return x\n\ndef typeof(name: str):\n    result = arg_types.get(name, identity)\n    if isinstance(result, str):\n        result = identity\n    return result\n\nparsed_args = [typeof(name)(arg) for arg, name in named_args]\nparsed_kwargs = {k: typeof(k)(v) for k, v in insn['kwargs'].items()}\n\ntask.run(*parsed_args, **parsed_kwargs)\n"
	
Module Classes
==============

..	container:: class-def-with-link
	
	:doc:`[DOC] <pkm_cli.tasks.tasks_runner.TasksRunner>`
	
	..	code-block:: python
		
		class TasksRunner
		