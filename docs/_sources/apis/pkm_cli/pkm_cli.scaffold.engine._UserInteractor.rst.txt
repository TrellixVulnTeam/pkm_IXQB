:orphan:

\_UserInteractor \(Class\)
##########################

..	code-block:: python
	
	class _UserInteractor
	
Class Methods
=============

..	code-block:: python
	
	def __init__(self, args: List, kwargs: Dict)
	
Description
-----------

Not Documented

Arguments
---------

..	rst-class:: args-table
	
..	list-table:: 
	:widths: auto
	:header-rows: 1
	
	*	-	Name
		-	Type
		-	Description
	*	-	self
		-	Any
		-	No Description
	*	-	args
		-	List
		-	No Description
	*	-	kwargs
		-	Dict
		-	No Description
	
-----------------------

..	code-block:: python
	
	def _pre_answered(self, named_arg: str, positional_arg: int) -> Optional[str]
	
Description
-----------

Not Documented

Arguments
---------

..	rst-class:: args-table
	
..	list-table:: 
	:widths: auto
	:header-rows: 1
	
	*	-	Name
		-	Type
		-	Description
	*	-	self
		-	Any
		-	No Description
	*	-	named_arg
		-	str
		-	No Description
	*	-	positional_arg
		-	int
		-	No Description
	
-----------------------

..	code-block:: python
	
	def say(self, msg: str)
	
Description
-----------

display a message to the user

Arguments
---------

..	rst-class:: args-table
	
..	list-table:: 
	:widths: auto
	:header-rows: 1
	
	*	-	Name
		-	Type
		-	Description
	*	-	self
		-	Any
		-	No Description
	*	-	msg
		-	str
		-	 the message to display
	
-----------------------

..	code-block:: python
	
	def confirm(self, named_arg: str, *, prompt: str, doc: str = '', 
	    default: bool = True, positional_arg: int = -1) -> bool
	
Description
-----------

ask the user for yes/no confirmation
(either retrieving it from the command line or from the user supplied arguments)

Arguments
---------

..	rst-class:: args-table
	
..	list-table:: 
	:widths: auto
	:header-rows: 1
	
	*	-	Name
		-	Type
		-	Description
	*	-	self
		-	Any
		-	No Description
	*	-	named_arg
		-	str
		-	 the name of the argument that may contain the value for this function to return (supports the values y,yes,n,no)
	*	-	prompt
		-	str
		-	 (optional - defaults to a string generated from named_arg) the prompt to show to the user
	*	-	doc
		-	str
		-	 documentation to show in the commandline (must be a string literal)
	*	-	default
		-	bool
		-	 (optional - defaults to True = 'yes') the default value to suggest the user
	*	-	positional_arg
		-	int
		-	 (optional - defaults to -1) the index of the positional argument that may contain the value for this function to return
	
Returns
-------

 True if the user confirmed or False otherwise

-----------------------

..	code-block:: python
	
	def arg(self, named_arg: str, *, doc: str = '', default: str = '', 
	    positional_arg = -1)
	
Description
-----------

fetch a value from the commandline arguments, without asking the user for it if not provided

Arguments
---------

..	rst-class:: args-table
	
..	list-table:: 
	:widths: auto
	:header-rows: 1
	
	*	-	Name
		-	Type
		-	Description
	*	-	self
		-	Any
		-	No Description
	*	-	named_arg
		-	str
		-	 the name of the argument that may contain the value for this function to return (supports the values y,yes,n,no)
	*	-	doc
		-	str
		-	 documentation to show in the commandline (must be a string literal)
	*	-	default
		-	str
		-	 (optional - defaults to None) the default value to suggest the user
	*	-	positional_arg
		-	Any
		-	  (optional - defaults to -1) the index of the positional argument that may contain the value for this function to return
	
Returns
-------

 the requested user value

-----------------------

..	code-block:: python
	
	def ask(self, named_arg: str, *, prompt: str = None, default: Any = '', 
	    options: Optional[List[str]] = None, secret: bool = False, 
	    positional_arg: int = -1, autocomplete: bool = False, 
	    multiselect: bool = False, path: bool = False, doc: str = '')
	
Description
-----------

ask the user for information (either retrieving it from the command line or from the user supplied arguments)

Arguments
---------

..	rst-class:: args-table
	
..	list-table:: 
	:widths: auto
	:header-rows: 1
	
	*	-	Name
		-	Type
		-	Description
	*	-	self
		-	Any
		-	No Description
	*	-	named_arg
		-	str
		-	 the name of the argument that may contain the value for this function to return
	*	-	prompt
		-	str
		-	 (optional - defaults to a string generated from named_arg) the prompt to show to the user
	*	-	default
		-	Any
		-	 (optional - defaults to None) the default value to suggest the user
	*	-	options
		-	Optional[List[str]]
		-	 (optional - defaults to None) list of choices to restrict the user input to
	*	-	secret
		-	bool
		-	 (optional - defaults to False) set to True to hide the user input
	*	-	positional_arg
		-	int
		-	  (optional - defaults to -1) the index of the positional argument that may contain the value for this function to return
	*	-	autocomplete
		-	bool
		-	 if true, options are suggested via auto-complete
	*	-	multiselect
		-	bool
		-	 if true, multiple options can be selected
	*	-	path
		-	bool
		-	 if true, will require the user to enter a valid path as a result to the prompt
	*	-	doc
		-	str
		-	 documentation to show in the commandline (must be a string literal) 
	
Returns
-------

 the requested user input

-----------------------

..	code-block:: python
	
	def install(self, module: ModuleType)
	
Description
-----------

Not Documented

Arguments
---------

..	rst-class:: args-table
	
..	list-table:: 
	:widths: auto
	:header-rows: 1
	
	*	-	Name
		-	Type
		-	Description
	*	-	self
		-	Any
		-	No Description
	*	-	module
		-	ModuleType
		-	No Description
	