:orphan:

Distribution \(Class\)
######################

..	code-block:: python
	
	class Distribution(Protocol)
	
Class Methods
=============

..	code-block:: python
	
	@property
	@abstractmethod
	def owner_package(self) -> PackageDescriptor
	
Description
-----------

Not Documented

Arguments
---------

..	rst-class:: args-table
	
..	list-table:: 
	:widths: auto
	:header-rows: 1
	
	*	-	Name
		-	Type
		-	Description
	*	-	self
		-	Any
		-	No Description
	
Returns
-------

 the package descriptor that this distribution belongs to

-----------------------

..	code-block:: python
	
	@abstractmethod
	def install_to(self, target: 'PackageInstallationTarget', 
	    user_request: Optional[Dependency] = None, 
	    installation_mode: Optional[PackageInstallationInfo] = None)
	
Description
-----------

installs this package into the given `env`

Arguments
---------

..	rst-class:: args-table
	
..	list-table:: 
	:widths: auto
	:header-rows: 1
	
	*	-	Name
		-	Type
		-	Description
	*	-	self
		-	Any
		-	No Description
	*	-	target
		-	'PackageInstallationTarget'
		-	 information about the target to install this distribution into
	*	-	user_request
		-	Optional[Dependency]
		-	 if this package was requested by the user, supplying this field will mark the installation as user request and save the given info
	*	-	installation_mode
		-	Optional[PackageInstallationInfo]
		-	 information about the installation mode to save while installing
	
-----------------------

..	code-block:: python
	
	@abstractmethod
	def extract_metadata(self, env: 'Environment') -> PackageMetadata
	
Description
-----------

extracts and returns metadata from this distribution

Arguments
---------

..	rst-class:: args-table
	
..	list-table:: 
	:widths: auto
	:header-rows: 1
	
	*	-	Name
		-	Type
		-	Description
	*	-	self
		-	Any
		-	No Description
	*	-	env
		-	'Environment'
		-	 the environment that this metadata should be relevant to
	
Returns
-------

 the extracted metadata

-----------------------

..	code-block:: python
	
	@classmethod
	def package_from(cls, distribution: Path, 
	    desc: Optional[PackageDescriptor] = None) -> Package
	
Description
-----------

creates a package from the given distribution, assumes proper naming conventions for distribution file name

Arguments
---------

..	rst-class:: args-table
	
..	list-table:: 
	:widths: auto
	:header-rows: 1
	
	*	-	Name
		-	Type
		-	Description
	*	-	cls
		-	Any
		-	No Description
	*	-	distribution
		-	Path
		-	 the path to the distribution
	*	-	desc
		-	Optional[PackageDescriptor]
		-	 if given, will be used as the descriptor of the package, otherwise a descriptor will be guessed from the file naming conventions
	
Returns
-------

 package that upon install will install the given distribution
