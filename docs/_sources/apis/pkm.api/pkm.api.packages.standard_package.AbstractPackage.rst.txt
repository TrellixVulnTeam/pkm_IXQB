:orphan:

AbstractPackage \(Class\)
#########################

..	code-block:: python
    
    class AbstractPackage(Package)
    
Class Methods
=============

..	code-block:: python
    
    @property
    def published_metadata(self) -> Optional[PackageMetadata]
    
Description
-----------

Not Documented

Arguments
---------

..	rst-class:: args-table
    
..	list-table:: 
    :widths: auto
    :header-rows: 1
    
    *   -   Name
        -   Type
        -   Description
    *   -   self
        -   Any
        -   No Description
    
-----------------------

..	code-block:: python
    
    @property
    def descriptor(self) -> PackageDescriptor
    
Description
-----------

Not Documented

Arguments
---------

..	rst-class:: args-table
    
..	list-table:: 
    :widths: auto
    :header-rows: 1
    
    *   -   Name
        -   Type
        -   Description
    *   -   self
        -   Any
        -   No Description
    
-----------------------

..	code-block:: python
    
    def best_artifact_for(self, env: 'Environment') -> Optional[PackageArtifact]
    
Description
-----------

searches for the best artifact that compatible with `env`

Arguments
---------

..	rst-class:: args-table
    
..	list-table:: 
    :widths: auto
    :header-rows: 1
    
    *   -   Name
        -   Type
        -   Description
    *   -   self
        -   Any
        -   No Description
    *   -   env
        -   'Environment'
        -    the environment that the searched artifact should be compatible with
    
Returns
-------

the best artifact found or None if no compatible artifact exists

-----------------------

..	code-block:: python
    
    def is_compatible_with(self, env: 'Environment')
    
Description
-----------

Not Documented

Arguments
---------

..	rst-class:: args-table
    
..	list-table:: 
    :widths: auto
    :header-rows: 1
    
    *   -   Name
        -   Type
        -   Description
    *   -   self
        -   Any
        -   No Description
    *   -   env
        -   'Environment'
        -   No Description
    
-----------------------

..	code-block:: python
    
    def install_to(self, target: PackageInstallationTarget, 
        user_request: Optional['Dependency'] = None, editable: bool = False)
    
Description
-----------

Not Documented

Arguments
---------

..	rst-class:: args-table
    
..	list-table:: 
    :widths: auto
    :header-rows: 1
    
    *   -   Name
        -   Type
        -   Description
    *   -   self
        -   Any
        -   No Description
    *   -   target
        -   PackageInstallationTarget
        -   No Description
    *   -   user_request
        -   Optional['Dependency']
        -   No Description
    *   -   editable
        -   bool
        -   No Description
    
-----------------------

..	code-block:: python
    
    def dependencies(self, environment: 'Environment', 
        extras: Optional[List[str]] = None) -> List['Dependency']
    
Description
-----------

Not Documented

Arguments
---------

..	rst-class:: args-table
    
..	list-table:: 
    :widths: auto
    :header-rows: 1
    
    *   -   Name
        -   Type
        -   Description
    *   -   self
        -   Any
        -   No Description
    *   -   environment
        -   'Environment'
        -   No Description
    *   -   extras
        -   Optional[List[str]]
        -   No Description
    